#0: <VOID>
#1: <PTR> --> [2]
#2: <TYPEDEF> 'stack_frame' --> [3]
#3: <STRUCT> 'Stack_frame' sz:40 n:5
	#00 'di' off:0 --> [4]
	#01 'si' off:64 --> [4]
	#02 'dx' off:128 --> [4]
	#03 'cx' off:192 --> [4]
	#04 'r8' off:256 --> [4]
#4: <INT> 'unsigned long' bits:64 off:0
#5: <FUNC_PROTO> r-->[6] n:1
	#00 'ctx' --> [1]
#6: <INT> 'int' bits:32 off:0 enc:signed
#7: <FUNC> 'eBPF_Patch' --> global [5]

Func section #0 '.text':
#0: func: insn #0 --> [7]

Line section #0 '.text':
#0: line: insn #0 --> 14:39 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		OPENSSL_LHASH *lh = (OPENSSL_LHASH *)REGS_PARM1(ctx);
#1: line: insn #4 --> 18:6 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		if (lh == NULL)
#2: line: insn #6 --> 21:2 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		for (i = 0; i < lh->num_nodes; i++)
#3: line: insn #10 --> 23:11 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
			n = lh->b[i];
#4: line: insn #11 --> 31:12 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
			lh->b[i] = NULL;
#5: line: insn #13 --> 21:16 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		for (i = 0; i < lh->num_nodes; i++)
#6: line: insn #14 --> 21:34 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		for (i = 0; i < lh->num_nodes; i++)
#7: line: insn #15 --> 21:2 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		for (i = 0; i < lh->num_nodes; i++)
#8: line: insn #17 --> 33:16 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
		lh->num_items = 0;
#9: line: insn #18 --> 36:1 @ /home/vagrant/linux-patch/eBPF-Linux-Patch-BTF-Parser/jsonPatch_writer/04-cve.bpf.c
	}
